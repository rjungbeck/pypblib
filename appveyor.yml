
image:
  - Visual Studio 2019

environment:

  matrix:

    # For Python versions available on Appveyor, see
    # https://www.appveyor.com/docs/windows-images-software/#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python37-x64"
    - PYTHON: "C:\\Python38-x64"
    - PYTHON: "C:\\Python39-x64"
    - PYTHON: "C:\\Python310-x64"
    - PYTHON: "C:\\Python311-x64"
    - PYTHON: "C:\\Python312-x64"
    - PYTHON: "C:\\Python313-x64"
    - PYTHON: "C:\\Python37"
    - PYTHON: "C:\\Python38"
    - PYTHON: "C:\\Python39"
    - PYTHON: "C:\\Python310"
    - PYTHON: "C:\\Python311"
    - PYTHON: "C:\\Python312"
    - PYTHON: "C:\\Python313"


install:
  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install setuptools wheel"

build: off

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*
    name: wheel

deploy:
  release: pypblib-v$(appveyor_build_version)
  description: 'Wheels'
  provider: GitHub
  auth_token:
    secure: 4MZFR0N93JCMB/oNOvGIXOFc/v99kO1av68bMZmHeFYkgh4YpvfWkeZuOg5qIJU7ysVAoTiwCQgmq4FxPlkeqQdxI1NCuvI4W9uJUpPeMDo12XcG/ZNHseIy1mXUb9ui # your encrypted token from GitHub
  artifact: wheel          # upload all wheels to release assets
  draft: false
  prerelease: false
  #on:
  #  branch: master                 # release from master branch only
  APPVEYOR_REPO_TAG: true        # deploy on tag push only
  
skip_tags: true

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
